#df = ps.read_csv('https://s3.amazonaws.com/tripdata/202211-citibike-tripdata.csv.zip',sep=';')
#https://www.meridianoutpost.com/resources/etools/calculators/calculator-latitude-longitude-distance.php?
#https://stackoverflow.com/questions/70315069/calculate-the-geographical-distance-in-pyspark-dataframe
from geopy.distance import geodesic
from pyspark.sql import functions as F

@F.udf(returnType=FloatType())
def geodesic_udf(a, b):
    return geodesic(a, b).m

df = spark.read.format("csv")\
.option("header",True) \
.option("inferSchema",False) \
    .option("delimiter",",") \
    .option("treatEmptyValuesAsNulls", False)\
    .option("encoding", "iso-8859-1")\
    .load('/mnt/prod/business-assets/sashelp/test/t3/202211-citibike-tripdata.csv')\
    .withColumn("input_file_name", F.input_file_name())\
    .withColumn('Lengths/m', geodesic_udf(F.array("start_lat", "start_lng"), F.array("end_lat", "end_lng")))\
    .withColumn("km",col('Lengths/m')/1000)
display(df)
